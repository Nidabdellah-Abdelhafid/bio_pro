image: jhipster/jhipster:v7.9.3

cache:
  key: '$CI_COMMIT_REF_NAME'
  paths:
    - .maven/

stages:
  - check
  - build
  - test
  - analyze
  - package
  - release
  - deploy
  - docker-push  # New stage for pushing to Docker Hub

before_script:
  - export MAVEN_USER_HOME=`pwd`/.maven

nohttp:
  stage: check
  script:
    - bash mvnw -ntp checkstyle:check -Dmaven.repo.local=$MAVEN_USER_HOME -Dmaven.compiler.release=11

maven-compile:
  stage: build
  script:
    - bash mvnw -ntp compile -P-webapp -Dmaven.repo.local=$MAVEN_USER_HOME -Dmaven.compiler.release=11
  artifacts:
    paths:
      - target/classes/
      - target/generated-sources/
    expire_in: 1 day

maven-package:
  stage: package
  script:
    - bash mvnw -ntp verify -Pprod -DskipTests -Dmaven.repo.local=$MAVEN_USER_HOME -Dmaven.compiler.release=11
  artifacts:
    paths:
      - target/*.jar
      - target/classes
    expire_in: 1 day

docker-push:
  stage: release
  variables:
    REGISTRY_URL: registry.gitlab.com
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA
  dependencies:
    - maven-package
  script:
    - bash mvnw -ntp jib:build -Pprod -Djib.to.image=$IMAGE_TAG -Djib.to.auth.username=$CI_REGISTRY_USER  -Djib.to.auth.password=$CI_BUILD_TOKEN -Dmaven.repo.local=$MAVEN_USER_HOME -Dmaven.compiler.release=11

docker-push-hub:
  image: docker:latest
  services:
    - docker:dind
  stage: docker-push
  script:
    - echo $CI_BUILD_TOKEN | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - echo "CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE"
    - echo "CI_COMMIT_REF_SLUG $CI_COMMIT_REF_SLUG"
    - echo "CI_COMMIT_SHA $CI_COMMIT_SHA"
    - echo "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    - docker tag "$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA" "$DOCKERHUB_USERNAME/bio_app:latest"
    - docker push "$DOCKERHUB_USERNAME/bio_app:latest"




